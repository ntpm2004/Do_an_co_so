// H√†m hi·ªÉn th·ªã th√¥ng b√°o
function showNotification(message) {
    alert(message); // Thay th·∫ø b·∫±ng m·ªôt th√¥ng b√°o t√πy ch·ªânh n·∫øu mu·ªën
}
// H√†m l∆∞u nguy·ªán v·ªçng
function saveWishes() {
    const loggedInCmnd = localStorage.getItem('loggedInCmnd'); // L·∫•y CCCD ƒë√£ l∆∞u sau khi ƒëƒÉng nh·∫≠p
    if (!loggedInCmnd) {
        showNotification('Vui l√≤ng ƒëƒÉng nh·∫≠p tr∆∞·ªõc khi l∆∞u nguy·ªán v·ªçng');
        return;
    }

    const wishes = [];
    const sections = document.querySelectorAll('.section');
    
    sections.forEach(section => {
        const majorSelect = section.querySelector('select[id^="major"]');
        const blockSelect = section.querySelector('select[id^="block"]');
        wishes.push({
            major: majorSelect.value,
            block: blockSelect.value
        });
    });

    // T·∫°o kh√≥a duy nh·∫•t cho nguy·ªán v·ªçng d·ª±a tr√™n CCCD
    const storageKey_Nvong = `wishes_data_${loggedInCmnd}`;

    // L∆∞u d·ªØ li·ªáu v√†o localStorage
    localStorage.setItem(storageKey_Nvong, JSON.stringify(wishes));
    showNotification('Nguy·ªán v·ªçng ƒë√£ ƒë∆∞·ª£c l∆∞u th√†nh c√¥ng!');
    
    // ƒê·ªïi ch·ªØ n√∫t l∆∞u th√†nh ƒê√É L∆ØU v√† v√¥ hi·ªáu h√≥a
    //const saveButton_Wishes = document.getElementById('save_wishes');
    //saveButton_Wishes.textContent = 'ƒê√É L∆ØU';
    //saveButton_Wishes.disabled = true;
}
// H√†m t·∫£i nguy·ªán v·ªçng
function loadWishes() {
    const loggedInCmnd = localStorage.getItem('loggedInCmnd'); // L·∫•y CCCD ƒë√£ l∆∞u sau khi ƒëƒÉng nh·∫≠p
    if (!loggedInCmnd) {
        showNotification('Vui l√≤ng ƒëƒÉng nh·∫≠p ƒë·ªÉ xem nguy·ªán v·ªçng.');
        return;
    }

    // T·∫°o kh√≥a duy nh·∫•t cho nguy·ªán v·ªçng d·ª±a tr√™n CCCD
    const storageKey_Nvong = `wishes_data_${loggedInCmnd}`;
    const savedData_Nvong = localStorage.getItem(storageKey_Nvong);

    if (savedData_Nvong) {
        savedData_Nvong.forEach((wish, index) => {
            if (index < 3) { // Ch·ªâ t·∫£i t·ªëi ƒëa 3 nguy·ªán v·ªçng
                const currentWish = document.getElementById(`wish-${index + 1}`);
                const majorSelect = currentWish.querySelector('select[id^="major"]');
                const blockSelect = currentWish.querySelector('select[id^="block"]');
                majorSelect.value = wish.major;
                
                // C·∫≠p nh·∫≠t danh s√°ch t·ªï h·ª£p x√©t tuy·ªÉn d·ª±a tr√™n ng√†nh ƒë√£ ch·ªçn
                updateBlocks(majorSelect, blockSelect);
                
                // G√°n gi√° tr·ªã t·ªï h·ª£p ƒë√£ l∆∞u
                blockSelect.value = wish.block;
            }
        });
}}

// Bi·∫øn ki·ªÉm tra xem th√¥ng tin ƒë√£ ƒë∆∞·ª£c l∆∞u hay ch∆∞a
let isSavedwish = false;

// H√†m ƒë·ªÉ ki·ªÉm tra xem th√¥ng tin ƒë√£ ƒë∆∞·ª£c l∆∞u ch∆∞a t·ª´ Local Storage
function checkIfSavedwish() {
    const savedata_ttin = localStorage.getItem(`wishes_data_${loggedInCmnd}`);
    if (savedata_ttin) {
        isSaved = true;
		//document.getElementById('deleteWishbutton').style.display = 'none';
		//document.getElementById('deleteWishbutton').disabled = true; // V√¥ hi·ªáu h√≥a n√∫t
		//document.getElementById('addWishBtn').style.display = 'none'; // ƒê·ªïi vƒÉn b·∫£n n√∫t
        //document.getElementById('save_nguyen_vong').textContent = 'ƒê√É L∆ØU'; // ƒê·ªïi vƒÉn b·∫£n n√∫t
        //document.getElementById('save_nguyen_vong').disabled = true; // V√¥ hi·ªáu h√≥a n√∫t
    }
}


// G·∫Øn s·ª± ki·ªán l∆∞u v·ªõi n√∫t l∆∞u nguy·ªán v·ªçng
document.getElementById('save_nguyen_vong').addEventListener('click', function(event) {
	event.preventDefault(); // NgƒÉn ch·∫∑n h√†nh ƒë·ªông g·ª≠i form m·∫∑c ƒë·ªãnh
    saveWishes();
});

// T·∫£i nguy·ªán v·ªçng khi trang ƒë∆∞·ª£c t·∫£i
window.onload = function() {
    if (localStorage.getItem('loggedInCmnd')) {
        loadReportCard(); 
    }
};
let wishCount = 3; // ƒê·∫øm s·ªë nguy·ªán v·ªçng hi·ªán t·∫°i
  // G√°n s·ª± ki·ªán cho n√∫t "Th√™m nguy·ªán v·ªçng"
  document.getElementById('addWishBtn').addEventListener('click', function(event) {
	event.preventDefault(); // NgƒÉn ch·∫∑n h√†nh vi m·∫∑c ƒë·ªãnh n·∫øu n√∫t n·∫±m trong m·ªôt form
	addWish(); // G·ªçi h√†m th√™m nguy·ªán v·ªçng
});

function deleteWish(wishId) {
	const wishElement = document.getElementById(wishId);
	if (wishElement) {
		wishElement.remove();
		updateWishes();
	}
	}
	
	function updateWishes() {
	const sections = document.querySelectorAll('.section');
	sections.forEach((section, index) => {
		const header = section.querySelector('.section-header span:first-child');
		header.textContent = `Nguy·ªán v·ªçng ${index + 1}`;
		section.id = `wish-${index + 1}`;
		const selectMajor = section.querySelector('select[id^="major"]');
		selectMajor.id = `major${index + 1}`;
		const selectBlock = section.querySelector('select[id^="block"]');
		selectBlock.id = `block${index + 1}`;
	});
	wishCount = sections.length; // C·∫≠p nh·∫≠t s·ªë l∆∞·ª£ng nguy·ªán v·ªçng
	document.getElementById('message').textContent = ""; // X√≥a th√¥ng b√°o
	}
	
	function addWish() {
	if (wishCount >= 3) {
		document.getElementById('message').textContent = "Ch·ªâ ƒë∆∞·ª£c t·ªëi ƒëa 3 nguy·ªán v·ªçng!";
		return;
	}
wishCount++;
const newWish = document.createElement('div');
newWish.classList.add('section');
newWish.id = `wish-${wishCount}`;
newWish.innerHTML = `
	<div class="section-header">
		<span>Nguy·ªán v·ªçng ${wishCount}</span>
		<span class="delete-button" id="deleteWishbutton" onclick="deleteWish('wish-${wishCount}')">üóëÔ∏è</span>
	</div>
	<div class="input-group">
		<label for="major${wishCount}">Ng√†nh/Ch∆∞∆°ng tr√¨nh ƒëƒÉng k√Ω x√©t tuy·ªÉn</label>
		<div class="select-group">
			<select id="major${wishCount}">
				<option value="C√¥ng Ngh·ªá Sinh H·ªçc">C√¥ng Ngh·ªá Sinh H·ªçc</option>
				<option value="K·ªπ Thu·∫≠t H√≥a H·ªçc">K·ªπ Thu·∫≠t H√≥a H·ªçc</option>
				<option value="K·ªπ Thu·∫≠t ƒêi·ªÅu Khi·ªÉn v√† T·ª± ƒê·ªông H√≥a">K·ªπ Thu·∫≠t ƒêi·ªÅu Khi·ªÉn v√† T·ª± ƒê·ªông H√≥a</option>
				<option value="K·ªπ Thu·∫≠t Y Sinh (H·ªá T∆∞ Sinh)">K·ªπ Thu·∫≠t Y Sinh (H·ªá T∆∞ Sinh)</option>
				<option value="K·ªπ Thu·∫≠t ƒêi·ªán T·ª≠ - Vi·ªÖn Th√¥ng (H·ªá Th·ªëng Th√¥ng Minh V√† IoT)">K·ªπ Thu·∫≠t ƒêi·ªán T·ª≠ - Vi·ªÖn Th√¥ng (H·ªá Th·ªëng Th√¥ng Minh V√† IoT)</option>
				<option value="K·ªπ Thu·∫≠t ƒêi·ªán T·ª≠ - Vi·ªÖn Th√¥ng (Thi·∫øt K·∫ø Vi M·∫°ch B·∫£n D·∫´n)">K·ªπ Thu·∫≠t ƒêi·ªán T·ª≠ - Vi·ªÖn Th√¥ng (Thi·∫øt K·∫ø Vi M·∫°ch B·∫£n D·∫´n)</option>
				<option value="K·ªπ Thu·∫≠t Robot V√† Tr√≠ Tu·ªá Nh√¢n T·∫°o (M·ªôt S·ªë H·ªçc Ph·∫ßn Chuy√™n Ng√†nh H·ªçc B·∫±ng Ti·∫øng Anh)">K·ªπ Thu·∫≠t Robot V√† Tr√≠ Tu·ªá Nh√¢n T·∫°o (M·ªôt S·ªë H·ªçc Ph·∫ßn Chuy√™n Ng√†nh H·ªçc B·∫±ng Ti·∫øng Anh)</option>
				<option value="C√¥ng Ngh·ªá Th√¥ng Tin">C√¥ng Ngh·ªá Th√¥ng Tin</option>
				<option value="K·ªπ Thu·∫≠t Ph·∫ßn M·ªÅm (M·ªôt S·ªë H·ªçc Ph·∫ßn Chuy√™n Ng√†nh H·ªçc B·∫±ng Ti·∫øng Anh)">K·ªπ Thu·∫≠t Ph·∫ßn M·ªÅm (M·ªôt S·ªë H·ªçc Ph·∫ßn Chuy√™n Ng√†nh H·ªçc B·∫±ng Ti·∫øng Anh)</option>
				<option value="C√¥ng Ngh·ªá Th√¥ng Tin Vi·ªát Nh·∫≠t">C√¥ng Ngh·ªá Th√¥ng Tin Vi·ªát Nh·∫≠t</option>
				<option value="Khoa H·ªçc M√°y T√≠nh">Khoa H·ªçc M√°y T√≠nh</option>
				<option value="T√†i NƒÉng Khoa H·ªçc M√°y T√≠nh">T√†i NƒÉng Khoa H·ªçc M√°y T√≠nh</option>
				<option value="An To√†n Th√¥ng Tin (M·ªôt S·ªë H·ªçc Ph·∫ßn Chuy√™n Ng√†nh H·ªçc B·∫±ng Ti·∫øng Anh)">An To√†n Th√¥ng Tin (M·ªôt S·ªë H·ªçc Ph·∫ßn Chuy√™n Ng√†nh H·ªçc B·∫±ng Ti·∫øng Anh)</option>
				<option value="Tr√≠ Tu·ªá Nh√¢n T·∫°o">Tr√≠ Tu·ªá Nh√¢n T·∫°o</option>
				<option value="K·ªπ Thu·∫≠t C∆° ƒêi·ªán T·ª≠">K·ªπ Thu·∫≠t C∆° ƒêi·ªán T·ª≠</option>
				<option value="K·ªπ Thu·∫≠t C∆° Kh√≠">K·ªπ Thu·∫≠t C∆° Kh√≠</option>
				<option value="V·∫≠t Li·ªáu Ti√™n Ti·∫øn V√† C√¥ng Ngh·ªá Nano">V·∫≠t Li·ªáu Ti√™n Ti·∫øn V√† C√¥ng Ngh·ªá Nano</option>
				<option value="V·∫≠t Li·ªáu Th√¥ng Minh V√† Tr√≠ Tu·ªá Nh√¢n T·∫°o">V·∫≠t Li·ªáu Th√¥ng Minh V√† Tr√≠ Tu·ªá Nh√¢n T·∫°o</option>
				<option value="Chip B√°n D·∫´n V√† C√¥ng Ngh·ªá ƒê√≥ng G√≥i">Chip B√°n D·∫´n V√† C√¥ng Ngh·ªá ƒê√≥ng G√≥i</option>
				<option value="K·ªπ Thu·∫≠t √î T√¥">K·ªπ Thu·∫≠t √î T√¥</option>
				<option value="C∆° ƒêi·ªán T·ª≠ √î T√¥">C∆° ƒêi·ªán T·ª≠ √î T√¥</option>
				<option value="K·ªπ Thu·∫≠t Ph·∫ßn M·ªÅm √î T√¥">K·ªπ Thu·∫≠t Ph·∫ßn M·ªÅm √î T√¥</option>
				<option value="Qu·∫£n Tr·ªã Kinh Doanh">Qu·∫£n Tr·ªã Kinh Doanh</option>
				<option value="K·∫ø To√°n">K·∫ø To√°n</option>
				<option value="T√†i Ch√≠nh - Ng√¢n H√†ng">T√†i Ch√≠nh - Ng√¢n H√†ng</option>
				<option value="Qu·∫£n Tr·ªã Nh√¢n L·ª±c">Qu·∫£n Tr·ªã Nh√¢n L·ª±c</option>
				<option value="Lu·∫≠t Kinh T·∫ø">Lu·∫≠t Kinh T·∫ø</option>
				<option value="Kinh Doanh Qu·ªëc T·∫ø (M·ªôt S·ªë H·ªçc Ph·∫ßn Chuy√™n Ng√†nh H·ªçc B·∫±ng Ti·∫øng Anh)">Kinh Doanh Qu·ªëc T·∫ø (M·ªôt S·ªë H·ªçc Ph·∫ßn Chuy√™n Ng√†nh H·ªçc B·∫±ng Ti·∫øng Anh)</option>
				<option value="Logistics v√† Qu·∫£n L√Ω Chu·ªói Cung ·ª®ng (M·ªôt S·ªë H·ªçc Ph·∫ßn Chuy√™n Ng√†nh H·ªçc B·∫±ng Ti·∫øng Anh)">Logistics v√† Qu·∫£n L√Ω Chu·ªói Cung ·ª®ng (M·ªôt S·ªë H·ªçc Ph·∫ßn Chuy√™n Ng√†nh H·ªçc B·∫±ng Ti·∫øng Anh)</option>
				<option value="Marketing">Marketing</option>
				<option value="C√¥ng Ngh·ªá T√†i Ch√≠nh">C√¥ng Ngh·ªá T√†i Ch√≠nh</option>
				<option value="Kinh T·∫ø S·ªë">Kinh T·∫ø S·ªë</option>
				<option value="Kinh Doanh S·ªë">Kinh Doanh S·ªë</option>
				<option value="Th∆∞∆°ng M·∫°i ƒêi·ªán T·ª≠">Th∆∞∆°ng M·∫°i ƒêi·ªán T·ª≠</option>
				<option value="Logistics S·ªë">Logistics S·ªë</option>
				<option value="C√¥ng Ngh·ªá Marketing">C√¥ng Ngh·ªá Marketing</option>
				<option value="Ng√¥n Ng·ªØ Anh">Ng√¥n Ng·ªØ Anh</option>
				<option value="Ng√¥n Ng·ªØ Trung Qu·ªëc">Ng√¥n Ng·ªØ Trung Qu·ªëc</option>
				<option value="Ng√¥n Ng·ªØ H√†n Qu·ªëc">Ng√¥n Ng·ªØ H√†n Qu·ªëc</option>
				<option value="Ng√¥n Ng·ªØ Nh·∫≠t">Ng√¥n Ng·ªØ Nh·∫≠t</option>
				<option value="Ng√¥n Ng·ªØ Ph√°p">Ng√¥n Ng·ªØ Ph√°p</option>
				<option value="ƒê√¥ng Ph∆∞∆°ng H·ªçc">ƒê√¥ng Ph∆∞∆°ng H·ªçc</option>
				<option value="Du L·ªãch (ƒê·ªãnh H∆∞·ªõng Qu·∫£n Tr·ªã Du L·ªãch)">Du L·ªãch (ƒê·ªãnh H∆∞·ªõng Qu·∫£n Tr·ªã Du L·ªãch)</option>
				<option value="Kinh Doanh Du L·ªãch S·ªë">Kinh Doanh Du L·ªãch S·ªë</option>
				<option value="H∆∞·ªõng D·∫´n Du L·ªãch Qu·ªëc T·∫ø">H∆∞·ªõng D·∫´n Du L·ªãch Qu·ªëc T·∫ø</option>
				<option value="Qu·∫£n Tr·ªã Kh√°ch S·∫°n">Qu·∫£n Tr·ªã Kh√°ch S·∫°n</option>
				<option value="ƒêi·ªÅu D∆∞·ª°ng">ƒêi·ªÅu D∆∞·ª°ng</option>
				<option value="D∆∞·ª£c H·ªçc">D∆∞·ª£c H·ªçc</option>
				<option value="K·ªπ Thu·∫≠t Ph·ª•c H·ªìi Ch·ª©c NƒÉng">K·ªπ Thu·∫≠t Ph·ª•c H·ªìi Ch·ª©c NƒÉng</option>
				<option value="K·ªπ Thu·∫≠t X√©t Nghi·ªám Y H·ªçc">K·ªπ Thu·∫≠t X√©t Nghi·ªám Y H·ªçc</option>
				<option value="K·ªπ Thu·∫≠t H√¨nh ·∫¢nh Y H·ªçc">K·ªπ Thu·∫≠t H√¨nh ·∫¢nh Y H·ªçc</option>
				<option value="Y Khoa">Y Khoa</option>
				<option value="RƒÉng H√†m M·∫∑t">RƒÉng H√†m M·∫∑t</option>
				<option value="Qu·∫£n L√Ω B·ªánh Vi·ªán">Qu·∫£n L√Ω B·ªánh Vi·ªán</option>
				<option value="Y H·ªçc C·ªï Truy·ªÅn">Y H·ªçc C·ªï Truy·ªÅn</option>
			</select>
			<select id="block${wishCount}">
				<option value="">Ch·ªçn t·ªï h·ª£p x√©t tuy·ªÉn</option>
			</select>
		</div>
	</div>
`;
	document.body.appendChild(newWish); // Th√™m nguy·ªán v·ªçng v√†o body
	document.getElementById('message').textContent = ""; // X√≥a th√¥ng b√°o
    // C·∫≠p nh·∫≠t kh·ªëi ng√†nh cho nguy·ªán v·ªçng m·ªõi
    const selectMajor = newWish.querySelector(`select[id="major${wishCount}"]`);
    const selectBlock = newWish.querySelector(`select[id="block${wishCount}"]`);
    updateBlocks(selectMajor, selectBlock);
}
const blocks = {
	'C√¥ng Ngh·ªá Sinh H·ªçc': ['A00 (To√°n, V·∫≠t l√Ω, H√≥a h·ªçc)', 'B00 (To√°n, H√≥a h·ªçc, Sinh h·ªçc)', 'B08 (To√°n, Sinh h·ªçc, Ti·∫øng Anh)', 'D07 (To√°n, H√≥a h·ªçc, Ti·∫øng Anh)'],
	'K·ªπ Thu·∫≠t H√≥a H·ªçc': ['A00 (To√°n, V·∫≠t l√Ω, H√≥a h·ªçc)', 'A01 (To√°n, V·∫≠t l√Ω, Ti·∫øng Anh)', 'B00 (To√°n, H√≥a h·ªçc, Sinh h·ªçc)', 'D07 (To√°n, H√≥a h·ªçc, Ti·∫øng Anh)'],
	'K·ªπ Thu·∫≠t ƒêi·ªÅu Khi·ªÉn v√† T·ª± ƒê·ªông H√≥a': ['A00 (To√°n, V·∫≠t l√Ω, H√≥a h·ªçc)', 'A01 (To√°n, V·∫≠t l√Ω, Ti·∫øng Anh)', 'C01 (Ng·ªØ vƒÉn, To√°n, V·∫≠t l√Ω)', 'D07 (To√°n, H√≥a h·ªçc, Ti·∫øng Anh)'],
	'K·ªπ Thu·∫≠t Y Sinh (H·ªá T∆∞ Sinh)': ['A00 (To√°n, V·∫≠t l√Ω, H√≥a h·ªçc)', 'A01 (To√°n, V·∫≠t l√Ω, Ti·∫øng Anh)', 'B00 (To√°n, H√≥a h·ªçc, Sinh h·ªçc)', 'D07 (To√°n, H√≥a h·ªçc, Ti·∫øng Anh)'],
	'K·ªπ Thu·∫≠t ƒêi·ªán T·ª≠ - Vi·ªÖn Th√¥ng (H·ªá Th·ªëng Th√¥ng Minh V√† IoT)': ['A00 (To√°n, V·∫≠t l√Ω, H√≥a h·ªçc)', 'A01 (To√°n, V·∫≠t l√Ω, Ti·∫øng Anh)', 'C01 (Ng·ªØ vƒÉn, To√°n, V·∫≠t l√Ω)', 'D07 (To√°n, H√≥a h·ªçc, Ti·∫øng Anh)'],
	'K·ªπ Thu·∫≠t ƒêi·ªán T·ª≠ - Vi·ªÖn Th√¥ng (Thi·∫øt K·∫ø Vi M·∫°ch B·∫£n D·∫´n)': ['A00 (To√°n, V·∫≠t l√Ω, H√≥a h·ªçc)', 'A01 (To√°n, V·∫≠t l√Ω, Ti·∫øng Anh)', 'C01 (Ng·ªØ vƒÉn, To√°n, V·∫≠t l√Ω)', 'D07 (To√°n, H√≥a h·ªçc, Ti·∫øng Anh)'],
	'K·ªπ Thu·∫≠t Robot V√† Tr√≠ Tu·ªá Nh√¢n T·∫°o (M·ªôt S·ªë H·ªçc Ph·∫ßn Chuy√™n Ng√†nh H·ªçc B·∫±ng Ti·∫øng Anh)': ['A00 (To√°n, V·∫≠t l√Ω, H√≥a h·ªçc)', 'A01 (To√°n, V·∫≠t l√Ω, Ti·∫øng Anh)', 'C01 (Ng·ªØ vƒÉn, To√°n, V·∫≠t l√Ω)', 'D07 (To√°n, H√≥a h·ªçc, Ti·∫øng Anh)'],
	'C√¥ng Ngh·ªá Th√¥ng Tin': ['A00 (To√°n, V·∫≠t l√Ω, H√≥a h·ªçc)', 'A01 (To√°n, V·∫≠t l√Ω, Ti·∫øng Anh)', 'D07 (To√°n, H√≥a h·ªçc, Ti·∫øng Anh)'],
	'K·ªπ Thu·∫≠t Ph·∫ßn M·ªÅm (M·ªôt S·ªë H·ªçc Ph·∫ßn Chuy√™n Ng√†nh H·ªçc B·∫±ng Ti·∫øng Anh)': ['A00 (To√°n, V·∫≠t l√Ω, H√≥a h·ªçc)', 'A01 (To√°n, V·∫≠t l√Ω, Ti·∫øng Anh)', 'D07 (To√°n, H√≥a h·ªçc, Ti·∫øng Anh)'],
	'C√¥ng Ngh·ªá Th√¥ng Tin Vi·ªát Nh·∫≠t': ['A00 (To√°n, V·∫≠t l√Ω, H√≥a h·ªçc)', 'A01 (To√°n, V·∫≠t l√Ω, Ti·∫øng Anh)', 'D07 (To√°n, H√≥a h·ªçc, Ti·∫øng Anh)', 'D28 (To√°n, V·∫≠t l√Ω, Ti·∫øng Nh·∫≠t)'],
	'Khoa H·ªçc M√°y T√≠nh': ['A00 (To√°n, V·∫≠t l√Ω, H√≥a h·ªçc)', 'A01 (To√°n, V·∫≠t l√Ω, Ti·∫øng Anh)', 'D07 (To√°n, H√≥a h·ªçc, Ti·∫øng Anh)'],
	'T√†i NƒÉng Khoa H·ªçc M√°y T√≠nh': ['A00 (To√°n, V·∫≠t l√Ω, H√≥a h·ªçc)', 'A01 (To√°n, V·∫≠t l√Ω, Ti·∫øng Anh)', 'D07 (To√°n, H√≥a h·ªçc, Ti·∫øng Anh)'],
	'An To√†n Th√¥ng Tin (M·ªôt S·ªë H·ªçc Ph·∫ßn Chuy√™n Ng√†nh H·ªçc B·∫±ng Ti·∫øng Anh)': ['A00 (To√°n, V·∫≠t l√Ω, H√≥a h·ªçc)', 'A01 (To√°n, V·∫≠t l√Ω, Ti·∫øng Anh)', 'D07 (To√°n, H√≥a h·ªçc, Ti·∫øng Anh)'],
	'Tr√≠ Tu·ªá Nh√¢n T·∫°o': ['A00 (To√°n, V·∫≠t l√Ω, H√≥a h·ªçc)', 'A01 (To√°n, V·∫≠t l√Ω, Ti·∫øng Anh)', 'D07 (To√°n, H√≥a h·ªçc, Ti·∫øng Anh)'],
	'K·ªπ Thu·∫≠t C∆° ƒêi·ªán T·ª≠': ['A00 (To√°n, V·∫≠t l√Ω, H√≥a h·ªçc)', 'A01 (To√°n, V·∫≠t l√Ω, Ti·∫øng Anh)', 'A02 (To√°n, V·∫≠t l√Ω, Sinh h·ªçc)', 'C01 (Ng·ªØ vƒÉn, To√°n, V·∫≠t l√Ω)'],
	'K·ªπ Thu·∫≠t C∆° Kh√≠': ['A00 (To√°n, V·∫≠t l√Ω, H√≥a h·ªçc)', 'A01 (To√°n, V·∫≠t l√Ω, Ti·∫øng Anh)', 'A02 (To√°n, V·∫≠t l√Ω, Sinh h·ªçc)', 'C01 (Ng·ªØ vƒÉn, To√°n, V·∫≠t l√Ω)'],
	'V·∫≠t Li·ªáu Ti√™n Ti·∫øn V√† C√¥ng Ngh·ªá Nano': ['A00 (To√°n, V·∫≠t l√Ω, H√≥a h·ªçc)', 'A01 (To√°n, V·∫≠t l√Ω, Ti·∫øng Anh)', 'B00 (To√°n, H√≥a h·ªçc, Sinh h·ªçc)', 'D07 (To√°n, H√≥a h·ªçc, Ti·∫øng Anh)'],
	'V·∫≠t Li·ªáu Th√¥ng Minh V√† Tr√≠ Tu·ªá Nh√¢n T·∫°o': ['A00 (To√°n, V·∫≠t l√Ω, H√≥a h·ªçc)', 'A01 (To√°n, V·∫≠t l√Ω, Ti·∫øng Anh)', 'C01 (Ng·ªØ vƒÉn, To√°n, V·∫≠t l√Ω)', 'D07 (To√°n, H√≥a h·ªçc, Ti·∫øng Anh)'],
	'Chip B√°n D·∫´n V√† C√¥ng Ngh·ªá ƒê√≥ng G√≥i': ['A00 (To√°n, V·∫≠t l√Ω, H√≥a h·ªçc)', 'A01 (To√°n, V·∫≠t l√Ω, Ti·∫øng Anh)', 'B00 (To√°n, H√≥a h·ªçc, Sinh h·ªçc)', 'D07 (To√°n, H√≥a h·ªçc, Ti·∫øng Anh)'],
	'K·ªπ Thu·∫≠t √î T√¥': ['A00 (To√°n, V·∫≠t l√Ω, H√≥a h·ªçc)', 'A01 (To√°n, V·∫≠t l√Ω, Ti·∫øng Anh)', 'A10 (To√°n, V·∫≠t l√Ω, Gi√°o d·ª•c c√¥ng d√¢n)', 'D01 (Ng·ªØ vƒÉn, To√°n, Ti·∫øng Anh)'],
	'C∆° ƒêi·ªán T·ª≠ √î T√¥': ['A00 (To√°n, V·∫≠t l√Ω, H√≥a h·ªçc)', 'A01 (To√°n, V·∫≠t l√Ω, Ti·∫øng Anh)', 'A10 (To√°n, V·∫≠t l√Ω, Gi√°o d·ª•c c√¥ng d√¢n)', 'D01 (Ng·ªØ vƒÉn, To√°n, Ti·∫øng Anh)'],
	'K·ªπ Thu·∫≠t Ph·∫ßn M·ªÅm √î T√¥': ['A00 (To√°n, V·∫≠t l√Ω, H√≥a h·ªçc)', 'A01 (To√°n, V·∫≠t l√Ω, Ti·∫øng Anh)', 'A10 (To√°n, V·∫≠t l√Ω, Gi√°o d·ª•c c√¥ng d√¢n)', 'D01 (Ng·ªØ vƒÉn, To√°n, Ti·∫øng Anh)'],

	'Qu·∫£n Tr·ªã Kinh Doanh': ['A00 (To√°n, V·∫≠t l√Ω, H√≥a h·ªçc)', 'A01 (To√°n, V·∫≠t l√Ω, Ti·∫øng Anh)', 'D01 (Ng·ªØ vƒÉn, To√°n, Ti·∫øng Anh)', 'D07 (To√°n, H√≥a h·ªçc, Ti·∫øng Anh)'],
	'K·∫ø To√°n': ['A00 (To√°n, V·∫≠t l√Ω, H√≥a h·ªçc)', 'A01 (To√°n, V·∫≠t l√Ω, Ti·∫øng Anh)', 'D01 (Ng·ªØ vƒÉn, To√°n, Ti·∫øng Anh)', 'D07 (To√°n, H√≥a h·ªçc, Ti·∫øng Anh)'],
	'T√†i Ch√≠nh - Ng√¢n H√†ng': ['A00 (To√°n, V·∫≠t l√Ω, H√≥a h·ªçc)', 'A01 (To√°n, V·∫≠t l√Ω, Ti·∫øng Anh)', 'D01 (Ng·ªØ vƒÉn, To√°n, Ti·∫øng Anh)', 'D07 (To√°n, H√≥a h·ªçc, Ti·∫øng Anh)'],
	'Qu·∫£n Tr·ªã Nh√¢n L·ª±c': ['A00 (To√°n, V·∫≠t l√Ω, H√≥a h·ªçc)', 'A01 (To√°n, V·∫≠t l√Ω, Ti·∫øng Anh)', 'D01 (Ng·ªØ vƒÉn, To√°n, Ti·∫øng Anh)', 'D07 (To√°n, H√≥a h·ªçc, Ti·∫øng Anh)'],
	'Lu·∫≠t Kinh T·∫ø': ['C00 (Ng·ªØ vƒÉn, L·ªãch s·ª≠, ƒê·ªãa l√Ω)', 'C04 (Ng·ªØ vƒÉn, To√°n, ƒê·ªãa l√Ω)', 'D01 (Ng·ªØ vƒÉn, To√°n, Ti·∫øng Anh)', 'D14 (Ng·ªØ vƒÉn, L·ªãch s·ª≠, Ti·∫øng Anh)'],
	'Kinh Doanh Qu·ªëc T·∫ø (M·ªôt S·ªë H·ªçc Ph·∫ßn Chuy√™n Ng√†nh H·ªçc B·∫±ng Ti·∫øng Anh)': ['A01 (To√°n, V·∫≠t l√Ω, Ti·∫øng Anh)', 'D01 (Ng·ªØ vƒÉn, To√°n, Ti·∫øng Anh)', 'D07 (To√°n, H√≥a h·ªçc, Ti·∫øng Anh)', 'D10 (To√°n, ƒê·ªãa l√Ω, Ti·∫øng Anh)'],
	'Logistics v√† Qu·∫£n L√Ω Chu·ªói Cung ·ª®ng (M·ªôt S·ªë H·ªçc Ph·∫ßn Chuy√™n Ng√†nh H·ªçc B·∫±ng Ti·∫øng Anh)': ['A01 (To√°n, V·∫≠t l√Ω, Ti·∫øng Anh)', 'D01 (Ng·ªØ vƒÉn, To√°n, Ti·∫øng Anh)', 'D07 (To√°n, H√≥a h·ªçc, Ti·∫øng Anh)', 'D10 (To√°n, ƒê·ªãa l√Ω, Ti·∫øng Anh)'],
	'Marketing': ['A00 (To√°n, V·∫≠t l√Ω, H√≥a h·ªçc)', 'A01 (To√°n, V·∫≠t l√Ω, Ti·∫øng Anh)', 'D01 (Ng·ªØ vƒÉn, To√°n, Ti·∫øng Anh)', 'D10 (To√°n, ƒê·ªãa l√Ω, Ti·∫øng Anh)'],
	'C√¥ng Ngh·ªá T√†i Ch√≠nh': ['A00 (To√°n, V·∫≠t l√Ω, H√≥a h·ªçc)', 'A01 (To√°n, V·∫≠t l√Ω, Ti·∫øng Anh)', 'D01 (Ng·ªØ vƒÉn, To√°n, Ti·∫øng Anh)', 'D07 (To√°n, H√≥a h·ªçc, Ti·∫øng Anh)'],
	'Kinh T·∫ø S·ªë': ['A00 (To√°n, V·∫≠t l√Ω, H√≥a h·ªçc)', 'A01 (To√°n, V·∫≠t l√Ω, Ti·∫øng Anh)', 'D01 (Ng·ªØ vƒÉn, To√°n, Ti·∫øng Anh)', 'D07 (To√°n, H√≥a h·ªçc, Ti·∫øng Anh)'],
	'Kinh Doanh S·ªë': ['A00 (To√°n, V·∫≠t l√Ω, H√≥a h·ªçc)', 'A01 (To√°n, V·∫≠t l√Ω, Ti·∫øng Anh)', 'D01 (Ng·ªØ vƒÉn, To√°n, Ti·∫øng Anh)', 'D07 (To√°n, H√≥a h·ªçc, Ti·∫øng Anh)'],
	'Th∆∞∆°ng M·∫°i ƒêi·ªán T·ª≠': ['A00 (To√°n, V·∫≠t l√Ω, H√≥a h·ªçc)', 'A01 (To√°n, V·∫≠t l√Ω, Ti·∫øng Anh)', 'D01 (Ng·ªØ vƒÉn, To√°n, Ti·∫øng Anh)', 'D07 (To√°n, H√≥a h·ªçc, Ti·∫øng Anh)'],
	'Logistics S·ªë': ['A00 (To√°n, V·∫≠t l√Ω, H√≥a h·ªçc)', 'A01 (To√°n, V·∫≠t l√Ω, Ti·∫øng Anh)', 'D01 (Ng·ªØ vƒÉn, To√°n, Ti·∫øng Anh)', 'D07 (To√°n, H√≥a h·ªçc, Ti·∫øng Anh)'],
	'C√¥ng Ngh·ªá Marketing': ['A00 (To√°n, V·∫≠t l√Ω, H√≥a h·ªçc)', 'A01 (To√°n, V·∫≠t l√Ω, Ti·∫øng Anh)', 'D01 (Ng·ªØ vƒÉn, To√°n, Ti·∫øng Anh)', 'D07 (To√°n, H√≥a h·ªçc, Ti·∫øng Anh)'],

	'Ng√¥n Ng·ªØ Anh': ['A01 (To√°n, V·∫≠t l√Ω, Ti·∫øng Anh)', 'D01 (Ng·ªØ vƒÉn, To√°n, Ti·∫øng Anh)', 'D09 (To√°n, L·ªãch s·ª≠, Ti·∫øng Anh)', 'D15 (Ng·ªØ vƒÉn, ƒê·ªãa l√Ω, Ti·∫øng Anh)'],
	'Ng√¥n Ng·ªØ Trung Qu·ªëc': ['A01 (To√°n, V·∫≠t l√Ω, Ti·∫øng Anh)', 'D01 (Ng·ªØ vƒÉn, To√°n, Ti·∫øng Anh)', 'D04 (Ng·ªØ vƒÉn, To√°n, Ti·∫øng Trung)', 'D09 (To√°n, L·ªãch s·ª≠, Ti·∫øng Anh)'],
	'Ng√¥n Ng·ªØ H√†n Qu·ªëc': ['A01 (To√°n, V·∫≠t l√Ω, Ti·∫øng Anh)', 'D01 (Ng·ªØ vƒÉn, To√°n, Ti·∫øng Anh)', 'D09 (To√°n, L·ªãch s·ª≠, Ti·∫øng Anh)', 'D02 (Ng·ªØ vƒÉn, To√°n, Ti·∫øng H√†n)'],
	'Ng√¥n Ng·ªØ Nh·∫≠t': ['A01 (To√°n, V·∫≠t l√Ω, Ti·∫øng Anh)', 'D01 (Ng·ªØ vƒÉn, To√°n, Ti·∫øng Anh)', 'D06 (Ng·ªØ vƒÉn, To√°n, Ti·∫øng Nh·∫≠t)', 'D28 (To√°n, V·∫≠t l√Ω, Ti·∫øng Nh·∫≠t)'],
	'Ng√¥n Ng·ªØ Ph√°p': ['A01 (To√°n, V·∫≠t l√Ω, Ti·∫øng Anh)', 'D01 (Ng·ªØ vƒÉn, To√°n, Ti·∫øng Anh)', 'D44 (Ng·ªØ vƒÉn, ƒê·ªãa l√Ω, Ti·∫øng Ph√°p)', 'D64 (Ng·ªØ vƒÉn, L·ªãch s·ª≠, Ti·∫øng Anh)'],
	'ƒê√¥ng Ph∆∞∆°ng H·ªçc': ['A01 (To√°n, V·∫≠t l√Ω, Ti·∫øng Anh)', 'C00 (Ng·ªØ vƒÉn, L·ªãch s·ª≠, ƒê·ªãa l√Ω)', 'D01 (Ng·ªØ vƒÉn, To√°n, Ti·∫øng Anh)', 'D09 (To√°n, L·ªãch s·ª≠, Ti·∫øng Anh)'],
	'Du L·ªãch (ƒê·ªãnh H∆∞·ªõng Qu·∫£n Tr·ªã Du L·ªãch)': ['A01 (To√°n, V·∫≠t l√Ω, Ti·∫øng Anh)', 'C00 (Ng·ªØ vƒÉn, L·ªãch s·ª≠, ƒê·ªãa l√Ω)', 'D01 (Ng·ªØ vƒÉn, To√°n, Ti·∫øng Anh)', 'D15 (Ng·ªØ vƒÉn, ƒê·ªãa l√Ω, Ti·∫øng Anh)'],
	'Kinh Doanh Du L·ªãch S·ªë': ['A00 (To√°n, V·∫≠t l√Ω, H√≥a h·ªçc)', 'A01 (To√°n, V·∫≠t l√Ω, Ti·∫øng Anh)', 'D01 (Ng·ªØ vƒÉn, To√°n, Ti·∫øng Anh)', 'D10 (To√°n, ƒê·ªãa l√Ω, Ti·∫øng Anh)'],
	'H∆∞·ªõng D·∫´n Du L·ªãch Qu·ªëc T·∫ø': ['A01 (To√°n, V·∫≠t l√Ω, Ti·∫øng Anh)', 'C00 (Ng·ªØ vƒÉn, L·ªãch s·ª≠, ƒê·ªãa l√Ω)', 'D01 (Ng·ªØ vƒÉn, To√°n, Ti·∫øng Anh)', 'D15 (Ng·ªØ vƒÉn, ƒê·ªãa l√Ω, Ti·∫øng Anh)'],
	'Qu·∫£n Tr·ªã Kh√°ch S·∫°n': ['A00 (To√°n, V·∫≠t l√Ω, H√≥a h·ªçc)', 'A01 (To√°n, V·∫≠t l√Ω, Ti·∫øng Anh)', 'D01 (Ng·ªØ vƒÉn, To√°n, Ti·∫øng Anh)', 'D10 (To√°n, ƒê·ªãa l√Ω, Ti·∫øng Anh)'],

	'ƒêi·ªÅu D∆∞·ª°ng': ['A00 (To√°n, V·∫≠t l√Ω, H√≥a h·ªçc)', 'A01 (To√°n, V·∫≠t l√Ω, Ti·∫øng Anh)', 'B00 (To√°n, H√≥a h·ªçc, Sinh h·ªçc)', 'B08 (To√°n, Sinh h·ªçc, Ti·∫øng Anh)'],
	'D∆∞·ª£c H·ªçc': ['A00 (To√°n, V·∫≠t l√Ω, H√≥a h·ªçc)', 'B00 (To√°n, H√≥a h·ªçc, Sinh h·ªçc)', 'B08 (To√°n, Sinh h·ªçc, Ti·∫øng Anh)', 'D07 (To√°n, H√≥a h·ªçc, Ti·∫øng Anh)'],
	'K·ªπ Thu·∫≠t Ph·ª•c H·ªìi Ch·ª©c NƒÉng': ['A02 (To√°n, V·∫≠t l√Ω, Sinh h·ªçc)', 'B00 (To√°n, H√≥a h·ªçc, Sinh h·ªçc)', 'B08 (To√°n, Sinh h·ªçc, Ti·∫øng Anh)', 'D07 (To√°n, H√≥a h·ªçc, Ti·∫øng Anh)'],
	'K·ªπ Thu·∫≠t X√©t Nghi·ªám Y H·ªçc': ['A02 (To√°n, V·∫≠t l√Ω, Sinh h·ªçc)', 'B00 (To√°n, H√≥a h·ªçc, Sinh h·ªçc)', 'B08 (To√°n, Sinh h·ªçc, Ti·∫øng Anh)', 'D07 (To√°n, H√≥a h·ªçc, Ti·∫øng Anh)'],
	'K·ªπ Thu·∫≠t H√¨nh ·∫¢nh Y H·ªçc': ['A02 (To√°n, V·∫≠t l√Ω, Sinh h·ªçc)', 'B00 (To√°n, H√≥a h·ªçc, Sinh h·ªçc)', 'B08 (To√°n, Sinh h·ªçc, Ti·∫øng Anh)', 'D07 (To√°n, H√≥a h·ªçc, Ti·∫øng Anh)'],
	'Y Khoa': ['A00 (To√°n, V·∫≠t l√Ω, H√≥a h·ªçc)','B00 (To√°n, H√≥a h·ªçc, Sinh h·ªçc)', 'B08 (To√°n, Sinh h·ªçc, Ti·∫øng Anh)', 'D07 (To√°n, H√≥a h·ªçc, Ti·∫øng Anh)'],
	'RƒÉng H√†m M·∫∑t': ['A00 (To√°n, V·∫≠t l√Ω, H√≥a h·ªçc)','B00 (To√°n, H√≥a h·ªçc, Sinh h·ªçc)', 'B08 (To√°n, Sinh h·ªçc, Ti·∫øng Anh)', 'D07 (To√°n, H√≥a h·ªçc, Ti·∫øng Anh)'],
	'Qu·∫£n L√Ω B·ªánh Vi·ªán': ['A00 (To√°n, V·∫≠t l√Ω, H√≥a h·ªçc)', 'A01 (To√°n, V·∫≠t l√Ω, Ti·∫øng Anh)', 'B00 (To√°n, H√≥a h·ªçc, Sinh h·ªçc)', 'D01 (Ng·ªØ vƒÉn, To√°n, Ti·∫øng Anh)'],
	'Y H·ªçc C·ªï Truy·ªÅn': ['A00 (To√°n, V·∫≠t l√Ω, H√≥a h·ªçc)','B00 (To√°n, H√≥a h·ªçc, Sinh h·ªçc)', 'B08 (To√°n, Sinh h·ªçc, Ti·∫øng Anh)', 'D07 (To√°n, H√≥a h·ªçc, Ti·∫øng Anh)'],
}
function updateBlocks(selectMajor, selectBlock) {
    const selectedMajor = selectMajor.value;
    const blockOptions = blocks[selectedMajor] || []; // L·∫•y t·ªï h·ª£p t∆∞∆°ng ·ª©ng v·ªõi ng√†nh ƒë√£ ch·ªçn
    selectBlock.innerHTML = ''; // X√≥a c√°c t√πy ch·ªçn tr∆∞·ªõc ƒë√≥

    blockOptions.forEach((block) => {
        const option = document.createElement('option');
        option.value = block;
        option.textContent = block;
        selectBlock.appendChild(option);
    });
}

// Thi·∫øt l·∫≠p cho c√°c nguy·ªán v·ªçng hi·ªán t·∫°i
document.querySelectorAll('.section').forEach((section) => {
    const selectMajor = section.querySelector('select[id^="major"]');
    const selectBlock = section.querySelector('select[id^="block"]');
    updateBlocks(selectMajor, selectBlock);
});

// L·∫Øng nghe s·ª± thay ƒë·ªïi c·ªßa l·ª±a ch·ªçn ng√†nh
document.addEventListener('change', function(event) {
    if (event.target.matches('select[id^="major"]')) {
        const selectMajor = event.target;
       const selectBlock = document.querySelector(`#block${selectMajor.id.replace('major', '')}`);
       updateBlocks(selectMajor, selectBlock);
    }
});

// L·∫Øng nghe s·ª± ki·ªán thay ƒë·ªïi ng√†nh ƒë·ªÉ c·∫≠p nh·∫≠t t·ªï h·ª£p x√©t tuy·ªÉn
document.querySelectorAll('.section').forEach((section) => {
    const majorSelect = section.querySelector('select[id^="major"]');
    const blockSelect = section.querySelector('select[id^="block"]');

    // G·ªçi h√†m c·∫≠p nh·∫≠t khi ng√†nh ƒë∆∞·ª£c thay ƒë·ªïi
    majorSelect.addEventListener('change', function(event) {
		event.preventDefault(); // NgƒÉn ch·∫∑n h√†nh ƒë·ªông g·ª≠i form m·∫∑c ƒë·ªãnh
        updateBlocks(majorSelect, blockSelect);
    });

    // Kh·ªüi t·∫°o danh s√°ch t·ªï h·ª£p x√©t tuy·ªÉn d·ª±a tr√™n ng√†nh hi·ªán t·∫°i (n·∫øu c√≥)
    updateBlocks(majorSelect, blockSelect);
});


